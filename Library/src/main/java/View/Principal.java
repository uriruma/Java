/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import static Controller.AuthorController.getAuthors;
import static Controller.FileController.*;
import Model.Author;
import java.awt.Color;

import javax.swing.JOptionPane;


/**
 *
 * @author uriru
 */
public class Principal extends javax.swing.JFrame {
    
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        readAuthorFile();
        readBookFile();
        getContentPane().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newAuthorButton = new javax.swing.JButton();
        libraryLabel = new javax.swing.JLabel();
        authorsLabel = new javax.swing.JLabel();
        booksLabel = new javax.swing.JLabel();
        modifyAuthorButton = new javax.swing.JButton();
        deleteAuthorButton = new javax.swing.JButton();
        newBookButton = new javax.swing.JButton();
        modifyBookButton = new javax.swing.JButton();
        deleteBookButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newAuthorButton.setText("New");
        newAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAuthorButtonActionPerformed(evt);
            }
        });

        libraryLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        libraryLabel.setText("LIBRARY");

        authorsLabel.setText("Authors");

        booksLabel.setText("Books");

        modifyAuthorButton.setText("Modify");
        modifyAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyAuthorButtonActionPerformed(evt);
            }
        });

        deleteAuthorButton.setText("Delete");
        deleteAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAuthorButtonActionPerformed(evt);
            }
        });

        newBookButton.setText("New");
        newBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBookButtonActionPerformed(evt);
            }
        });

        modifyBookButton.setText("Modify");
        modifyBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBookButtonActionPerformed(evt);
            }
        });

        deleteBookButton.setText("Delete");
        deleteBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteAuthorButton)
                            .addComponent(modifyAuthorButton)
                            .addComponent(newAuthorButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(authorsLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(booksLabel)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(newBookButton)
                            .addGap(80, 80, 80))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(modifyBookButton)
                                .addComponent(deleteBookButton))
                            .addContainerGap()))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addGap(178, 178, 178))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(libraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(libraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booksLabel)
                    .addComponent(authorsLabel))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newBookButton)
                    .addComponent(newAuthorButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyBookButton)
                    .addComponent(modifyAuthorButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBookButton)
                    .addComponent(deleteAuthorButton))
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAuthorButtonActionPerformed
        NewAuthor addA = new NewAuthor(this, true);
        addA.setLocationRelativeTo(null);
        addA.setVisible(true);
        
        writeAuthorFile();
        writeBookFile();
    }//GEN-LAST:event_newAuthorButtonActionPerformed

    private void modifyAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyAuthorButtonActionPerformed
        if (!getAuthors().isEmpty()) {//if there aren't any authors, cannot proceed
            ModifyAuthor mod = new ModifyAuthor(this, true);
            mod.setLocationRelativeTo(null);
            mod.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You don't have any author yet!", "Unabe to proceed", JOptionPane.ERROR_MESSAGE);
        }
        
        writeAuthorFile();
        writeBookFile();

    }//GEN-LAST:event_modifyAuthorButtonActionPerformed

    private void deleteAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAuthorButtonActionPerformed
        if (!getAuthors().isEmpty()) {
            DeleteAuthor del = new DeleteAuthor(this, true);
            del.setLocationRelativeTo(null);
            del.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You don't have any author yet!", "Unabe to proceed", JOptionPane.ERROR_MESSAGE);
        }
        
        writeAuthorFile();
        writeBookFile();
    }//GEN-LAST:event_deleteAuthorButtonActionPerformed

    private void newBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBookButtonActionPerformed
        if (!getAuthors().isEmpty()) {
            NewBook addB = new NewBook(this, true);
            addB.setLocationRelativeTo(null);
            addB.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You don't have any author yet!", "Unabe to proceed", JOptionPane.ERROR_MESSAGE);
        }
        
        writeAuthorFile();
        writeBookFile();
    }//GEN-LAST:event_newBookButtonActionPerformed

    private void modifyBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBookButtonActionPerformed
        boolean books = false;
        for (Author a : getAuthors()) {
            if (!a.getBooksAuthor().isEmpty()) {
                books = true;
            }
        }
        if (books) {
            ModifyBook modB = new ModifyBook(this, true);
            modB.setLocationRelativeTo(null);
            modB.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You don't have any book yet!", "Unabe to proceed", JOptionPane.ERROR_MESSAGE);
        }
        
        writeAuthorFile();
        writeBookFile();
    }//GEN-LAST:event_modifyBookButtonActionPerformed

    private void deleteBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookButtonActionPerformed
        boolean books = false;
        for (Author a : getAuthors()) {
            if (!a.getBooksAuthor().isEmpty()) {
                books = true;
            }
        }
        if (books) {
            DeleteBook delB = new DeleteBook(this, true);
            delB.setLocationRelativeTo(null);
            delB.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You don't have any book yet!", "Unabe to proceed", JOptionPane.ERROR_MESSAGE);
        }
        
        writeAuthorFile();
        writeBookFile();
    }//GEN-LAST:event_deleteBookButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        boolean books = false;
        for (Author a : getAuthors()) {
            if (!a.getBooksAuthor().isEmpty()) {
                books = true;
            }
        }
        if (books) {
            SearchBook search = new SearchBook(this, true);
            search.setLocationRelativeTo(null);
            search.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You don't have any book yet!", "Unabe to proceed", JOptionPane.ERROR_MESSAGE);
        }
        
        writeAuthorFile();
        writeBookFile();
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorsLabel;
    private javax.swing.JLabel booksLabel;
    private javax.swing.JButton deleteAuthorButton;
    private javax.swing.JButton deleteBookButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel libraryLabel;
    private javax.swing.JButton modifyAuthorButton;
    private javax.swing.JButton modifyBookButton;
    private javax.swing.JButton newAuthorButton;
    private javax.swing.JButton newBookButton;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
