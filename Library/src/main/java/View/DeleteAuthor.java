/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import static Controller.AuthorController.deleteAuthor;
import static Controller.AuthorController.getAuthorByFullName;
import static Controller.AuthorController.getAuthors;
import Exception.AuthorException;
import Model.Author;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author uriru
 */
public class DeleteAuthor extends javax.swing.JDialog {

    Author authorSelected;

    /**
     * Creates new form DeleteAuthor
     */
    public DeleteAuthor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(Color.white);
        //add all the authors to the combobox
        for (Author a : getAuthors()) {
            authorComboBox.addItem(a.getName() + " " + a.getSurname() + " " + a.getSecondSurname());
        }
        //author selected by default by the full name
        String completeName = (String) authorComboBox.getSelectedItem();
        String[] fullName = completeName.split(" ");
        try {
            authorSelected = getAuthorByFullName(fullName[0], fullName[1], fullName[2]);
        } catch (AuthorException ex) {
            // it shouldn't be done, but just in case:
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        authorLabel = new javax.swing.JLabel();
        authorComboBox = new javax.swing.JComboBox<>();
        deleteAuthorButton = new javax.swing.JButton();
        authorBooksLabel = new javax.swing.JLabel();
        backButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        authorLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        authorLabel.setText("Author");

        authorComboBox.setEditable(true);
        authorComboBox.setMaximumRowCount(40);
        authorComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                authorComboBoxItemStateChanged(evt);
            }
        });

        deleteAuthorButton.setText("Delete");
        deleteAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAuthorButtonActionPerformed(evt);
            }
        });

        backButton1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        backButton1.setText("<");
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(backButton1)
                .addGap(18, 18, 18)
                .addComponent(authorLabel)
                .addGap(18, 18, 18)
                .addComponent(authorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(authorBooksLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(deleteAuthorButton)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorLabel)
                            .addComponent(authorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addComponent(deleteAuthorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(authorBooksLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void authorComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_authorComboBoxItemStateChanged
        //this changes the author selected from the combo box
        String completeName = (String) authorComboBox.getSelectedItem();
        String[] fullName = completeName.split(" ");
        try {
            authorSelected = getAuthorByFullName(fullName[0], fullName[1], fullName[2]);
            //show the number of books the author has
            authorBooksLabel.setText("The author has " + authorSelected.getBooksAuthor().size() + " books");
        } catch (AuthorException ex) {
            //it shouldn't be done, but just in case
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_authorComboBoxItemStateChanged

    private void deleteAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAuthorButtonActionPerformed
        //this delete the author selected of the combo box
        try {
            deleteAuthor(authorSelected);//falta borrar els llibres
            JOptionPane.showMessageDialog(this, "Author deleted with exit!", "OK", JOptionPane.INFORMATION_MESSAGE);
            dispose();//this will close the window
        } catch (AuthorException e) {//It shouldn't be done but just in case
            JOptionPane.showMessageDialog(this, e.getMessage(), "Unable to delete the author", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteAuthorButtonActionPerformed

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_backButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteAuthor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteAuthor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteAuthor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteAuthor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeleteAuthor dialog = new DeleteAuthor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorBooksLabel;
    private javax.swing.JComboBox<String> authorComboBox;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JButton backButton1;
    private javax.swing.JButton deleteAuthorButton;
    // End of variables declaration//GEN-END:variables
}
