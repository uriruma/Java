/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import static Controller.AuthorController.getAuthorByFullName;
import static Controller.AuthorController.getAuthors;
import Exception.AuthorException;
import Model.Author;
import Model.Book;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author uriru
 */
public class SearchBook extends javax.swing.JDialog {

    Author authorSelected;
    Book bookSelected;
    ArrayList<Book> bookResult = new ArrayList<>();
    int index;

    /**
     * Creates new form SearchBook
     */
    public SearchBook(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(Color.white);
        //add all the authors to the combobox
        for (Author a : getAuthors()) {
            authorsComboBox.addItem(a.getName() + " " + a.getSurname() + " " + a.getSecondSurname());
        }
        index = 0;//this will control the search array
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        authorLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        titleLabel = new javax.swing.JLabel();
        isbnLabel = new javax.swing.JLabel();
        numberOfPagesLabel = new javax.swing.JLabel();
        genre_resultLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        isbnTextField = new javax.swing.JTextField();
        numberOfPagesTextField = new javax.swing.JTextField();
        genreTextField = new javax.swing.JTextField();
        genreComboBox = new javax.swing.JComboBox<>();
        authorsComboBox = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        forwardButton = new javax.swing.JButton();
        backwardButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        authorLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        authorLabel.setText("Author:");

        genreLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        genreLabel.setText("Genre:");

        titleLabel.setText("Title:");

        isbnLabel.setText("ISBN:");

        numberOfPagesLabel.setText("NÂº Pages:");

        genre_resultLabel.setText("Genre:");

        titleTextField.setEditable(false);

        isbnTextField.setEditable(false);

        numberOfPagesTextField.setEditable(false);

        genreTextField.setEditable(false);

        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comedy", "Drama", "Fantasy", "Thriller", "Action" }));

        backButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        backButton.setText("<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        forwardButton.setText("Forward >>");
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });

        backwardButton.setText("<< Backward");
        backwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backwardButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(numberOfPagesLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genre_resultLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(isbnLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(backwardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genreTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(137, 141, Short.MAX_VALUE)
                        .addComponent(forwardButton))
                    .addComponent(numberOfPagesTextField)
                    .addComponent(isbnTextField)
                    .addComponent(titleTextField))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(backButton)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genreLabel)
                    .addComponent(authorLabel))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(authorsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(genreComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(authorLabel)
                    .addComponent(authorsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(genreLabel)
                        .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleLabel))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isbnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isbnLabel))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfPagesLabel)
                    .addComponent(numberOfPagesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genre_resultLabel)
                    .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forwardButton)
                    .addComponent(backwardButton))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        if (!bookResult.isEmpty()) {//we evaluate if the array is not empty to continue
            if (index == bookResult.size() - 1) {//if the index is the last position, forward will go to the first position
                index = bookResult.size() - bookResult.size();
            } else {
                index++;
            }
            titleTextField.setText(bookResult.get(index).getTitle());
            isbnTextField.setText(bookResult.get(index).getIsbn());
            numberOfPagesTextField.setText(String.valueOf(bookResult.get(index).getNumberOfPages()));
            genreTextField.setText(bookResult.get(index).getGenre());
        } else {
            JOptionPane.showMessageDialog(this, "No matches found.", "Try again!", JOptionPane.WARNING_MESSAGE);
            titleTextField.setText("");
            isbnTextField.setText("");
            numberOfPagesTextField.setText("");
            genreTextField.setText("");
        }
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String completeName = (String) authorsComboBox.getSelectedItem();
        String[] fullName = completeName.split(" ");
        String genre_search = (String) genreComboBox.getSelectedItem();
        bookResult = new ArrayList<>();
        index = 0;
        try {
            //this will fill the texts fields
            authorSelected = getAuthorByFullName(fullName[0], fullName[1], fullName[2]);
            for (Book b : authorSelected.getBooksAuthor()) {
                if (b.getGenre().equals(genre_search)) {
                    bookResult.add(b);
                }
            }
            if (!bookResult.isEmpty()) {//we evaluate if the array is not empty to continue
                titleTextField.setText(bookResult.get(index).getTitle());
                isbnTextField.setText(bookResult.get(index).getIsbn());
                numberOfPagesTextField.setText(String.valueOf(bookResult.get(index).getNumberOfPages()));
                genreTextField.setText(bookResult.get(index).getGenre());
            } else {
                JOptionPane.showMessageDialog(this, "No matches found.", "Try again!", JOptionPane.WARNING_MESSAGE);
                titleTextField.setText("");
                isbnTextField.setText("");
                numberOfPagesTextField.setText("");
                genreTextField.setText("");
            }
        } catch (AuthorException ex) {

        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void backwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backwardButtonActionPerformed
        if (!bookResult.isEmpty()) {//we evaluate if the array is not empty to continue
            if (index == bookResult.size() - bookResult.size()) {//if the index is the last position, forward will go to the first position
                index = bookResult.size() - 1;
            } else {
                index--;
            }
            titleTextField.setText(bookResult.get(index).getTitle());
            isbnTextField.setText(bookResult.get(index).getIsbn());
            numberOfPagesTextField.setText(String.valueOf(bookResult.get(index).getNumberOfPages()));
            genreTextField.setText(bookResult.get(index).getGenre());
        } else {
            JOptionPane.showMessageDialog(this, "No matches found.", "Try again!", JOptionPane.WARNING_MESSAGE);
            titleTextField.setText("");
            isbnTextField.setText("");
            numberOfPagesTextField.setText("");
            genreTextField.setText("");
        }
    }//GEN-LAST:event_backwardButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchBook dialog = new SearchBook(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorLabel;
    private javax.swing.JComboBox<String> authorsComboBox;
    private javax.swing.JButton backButton;
    private javax.swing.JButton backwardButton;
    private javax.swing.JButton forwardButton;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JTextField genreTextField;
    private javax.swing.JLabel genre_resultLabel;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JTextField isbnTextField;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel numberOfPagesLabel;
    private javax.swing.JTextField numberOfPagesTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    // End of variables declaration//GEN-END:variables
}
