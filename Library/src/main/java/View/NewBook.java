/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import static Controller.AuthorController.getAuthorByFullName;
import static Controller.AuthorController.getAuthors;
import static Controller.BookController.addBookToAuthor;
import static Data.DataValidation.isValidISBN;
import Exception.AuthorException;
import Exception.BookException;
import Model.Author;
import Model.Book;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author uriru
 */
public class NewBook extends javax.swing.JDialog {
    
    Author authorSelected;
    /**
     * Creates new form NewBook
     */
    public NewBook(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(Color.white);
        warningLabel.setVisible(false);//this is a warning label used later
        isbnTextField.setToolTipText("11 numbers");
        //add all the authors to the combobox
        for (Author a : getAuthors()) {
            authorComboBox.addItem(a.getName() + " " + a.getSurname() + " " + a.getSecondSurname());
        }
        //author selected by default by the full name
        String completeName = (String) authorComboBox.getSelectedItem();
        String[] fullName = completeName.split(" ");
        try {
            authorSelected = getAuthorByFullName(fullName[0], fullName[1], fullName[2]);
        } catch (AuthorException ex) {
            // it shouldn't be done, but just in case:
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        newBookLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        isbnLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        numberOfPagesLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        isbnTextField = new javax.swing.JTextField();
        numberOfPagesSpinner = new javax.swing.JSpinner();
        titleTextField = new javax.swing.JTextField();
        authorComboBox = new javax.swing.JComboBox<>();
        confirmButton = new javax.swing.JButton();
        warningLabel = new javax.swing.JLabel();
        genreComboBox = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        newBookLabel.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        newBookLabel.setText("New Book");

        backButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        backButton.setText("<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        isbnLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        isbnLabel.setText("ISBN:");

        titleLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        titleLabel.setText("Title:");

        numberOfPagesLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        numberOfPagesLabel.setText("NÂº Pages:");

        genreLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        genreLabel.setText("Genre:");

        authorLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        authorLabel.setText("Author:");

        numberOfPagesSpinner.setToolTipText("");

        authorComboBox.setEditable(true);
        authorComboBox.setActionCommand("");
        authorComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                authorComboBoxItemStateChanged(evt);
            }
        });

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        warningLabel.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        warningLabel.setText("You must rewrite a valid option in the red camps.");

        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comedy", "Drama", "Fantasy", "Thriller", "Action" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(backButton)
                .addGap(108, 108, 108)
                .addComponent(newBookLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(titleLabel)
                                .addComponent(numberOfPagesLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(authorLabel)
                                    .addComponent(genreLabel))))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(genreComboBox, 0, 201, Short.MAX_VALUE)
                            .addComponent(numberOfPagesSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isbnTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(authorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(65, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(isbnLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(warningLabel)
                                .addGap(29, 29, 29)
                                .addComponent(confirmButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newBookLabel)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isbnLabel)
                    .addComponent(isbnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfPagesLabel)
                    .addComponent(numberOfPagesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreLabel)
                    .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(warningLabel)
                    .addComponent(confirmButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void authorComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_authorComboBoxItemStateChanged
        //load data in textboxs from the author selected by the full name
        String completeName = (String) authorComboBox.getSelectedItem();
        String[] fullName = completeName.split(" ");
        try {
            authorSelected = getAuthorByFullName(fullName[0], fullName[1], fullName[2]);
        } catch (AuthorException ex) {
            // it shouldn't be done, but just in case
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_authorComboBoxItemStateChanged

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        //collecting the book text fields with a trim for the spaces at the beggining or the end
        String isbn = isbnTextField.getText().trim();
        String title = titleTextField.getText().trim();
        int numberOfPages = Math.abs((int) numberOfPagesSpinner.getValue());//we get the absolute value
        String genre = (String) genreComboBox.getSelectedItem();
        boolean valid = true;//if any of the camps is not valid this will be false
        
        //if any text field is in blank an error is shown
        if (isbn.isEmpty() || title.isEmpty() || title.isEmpty()) {
            JOptionPane.showMessageDialog(this, "You must fill every camp of the Author", "Empty data", JOptionPane.ERROR_MESSAGE);
        } else {
            //here we check if all the Strings are valid
            if (isValidISBN(isbn)) {
                isbnTextField.setForeground(Color.GREEN);//if it is valid is green
            } else {
                isbnTextField.setForeground(Color.RED);//if it is not valid is red
                valid = false;
            }
            if ((title.length() <= 20)) {//I don't validate the title because it can be whatever the author want, just the length and the spaces
                titleTextField.setForeground(Color.GREEN);
            } else {
                titleTextField.setForeground(Color.RED);
                valid = false;
            }
            if (numberOfPages != 0){//As we get the absolute value it doesn't matter if its a negative number
                numberOfPagesSpinner.setForeground(Color.GREEN);
            } else {
                numberOfPagesSpinner.setForeground(Color.RED);
                valid = false;
            }
        }
        //if all the variables are valid then we proceed to add the author
        if (valid) {
            warningLabel.setVisible(false);//this hides the warning, there is no error
            Book b = new Book(isbn, title, numberOfPages, genre);
            Author a = authorSelected;
            try {
                addBookToAuthor(a, b);
                //ask if want to add another book
                int result = JOptionPane.showConfirmDialog(this, "Do you want to add another Book?", "Swing Tester",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                switch (result) {
                    case JOptionPane.NO_OPTION -> dispose();//this close the window
                    case JOptionPane.YES_OPTION -> {//reset all the text fields if option = yes
                       isbnTextField.setText(""); isbnTextField.setForeground(Color.BLACK);
                       titleTextField.setText(""); titleTextField.setForeground(Color.BLACK);
                       numberOfPagesSpinner.setValue(0);
                    }
                    default -> System.out.println("No he seleccionat res");
                }
            } catch (BookException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Unable to add the book", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            warningLabel.setVisible(true);//this makes the warning visible to let the user fix the error
        }                    
    }//GEN-LAST:event_confirmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewBook dialog = new NewBook(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> authorComboBox;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JTextField isbnTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel newBookLabel;
    private javax.swing.JLabel numberOfPagesLabel;
    private javax.swing.JSpinner numberOfPagesSpinner;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
