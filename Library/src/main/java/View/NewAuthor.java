/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import static Data.DataValidation.*;
import static Controller.AuthorController.addAuthor;
import Exception.AuthorException;
import Model.Author;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author uriru
 */
public class NewAuthor extends javax.swing.JDialog {

    /**
     * Creates new form newAuthor
     *
     * @param parent
     */
    public NewAuthor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(Color.white);
        warningLabel.setVisible(false);//this is a warning label used later
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        surnameLabel = new javax.swing.JLabel();
        secondSurnameLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        surnameTextField = new javax.swing.JTextField();
        secondSurnameTextField = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        warningLabel = new javax.swing.JLabel();
        countryComboBox = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        titleLabel.setText("New Author:");

        nameLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nameLabel.setText("Name:");

        surnameLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        surnameLabel.setText("Surname:");

        secondSurnameLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        secondSurnameLabel.setText("Second surname:");

        countryLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        countryLabel.setText("Country:");

        confirmButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        backButton.setText("<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        warningLabel.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        warningLabel.setText("You must rewrite a valid string in the red camps.");

        countryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Russia", "Germany", "United Kingdom", "France", "Italy", "Spain", "Ukraine", "Poland", "Romania", "Netherlands", "Belgium" }));
        countryComboBox.setActionCommand("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(warningLabel)
                                .addGap(35, 35, 35)
                                .addComponent(confirmButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(backButton)
                                .addGap(90, 90, 90)
                                .addComponent(titleLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nameLabel)
                                    .addComponent(surnameLabel)
                                    .addComponent(secondSurnameLabel)
                                    .addComponent(countryLabel))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(surnameTextField)
                                    .addComponent(nameTextField)
                                    .addComponent(secondSurnameTextField)
                                    .addComponent(countryComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(62, 62, 62))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(titleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameLabel)
                    .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondSurnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondSurnameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(warningLabel))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //ACCEPT BUTTON
    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        //collecting the author text fields with a trim for the spaces at the beggining or the end
        String name = nameTextField.getText().trim();
        String surname = surnameTextField.getText().trim();
        String secondSurname = secondSurnameTextField.getText().trim();
        String country = (String) countryComboBox.getSelectedItem();
        int count = 0;//this is a count to validate how many strings are valid

        //if any text field is in blank an error is shown
        if (name.isEmpty() || surname.isEmpty() || secondSurname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "You must fill every camp of the Author", "Empty data", JOptionPane.ERROR_MESSAGE);
        } else {
            //here we check if all the Strings are valid
            if (isValidString(name)) {
                nameTextField.setForeground(Color.GREEN);//if it is valid is green
                count++;//this counts how many Strings are valid
            } else {
                nameTextField.setForeground(Color.RED);//if it is not valid is red
            }
            if (isValidString(surname)) {
                surnameTextField.setForeground(Color.GREEN);
                count++;
            } else {
                surnameTextField.setForeground(Color.RED);
            }
            if (isValidString(secondSurname)) {
                secondSurnameTextField.setForeground(Color.GREEN);
                count++;
            } else {
                secondSurnameTextField.setForeground(Color.RED);
            }
        }
        //if all the variables are valid then we proceed to add the author
        if (count == 3) {
            warningLabel.setVisible(false);//this hides the warning, there is no error
            Author a = new Author(name, surname, secondSurname, country);
            try {
                addAuthor(a);
                //ask if want to add another author
                int result = JOptionPane.showConfirmDialog(this, "Do you want to add another Author?", "Swing Tester",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                switch (result) {
                    case JOptionPane.NO_OPTION ->
                        dispose();
                    case JOptionPane.YES_OPTION -> {//reset all the text fields if option = yes
                        nameTextField.setText("");
                        nameTextField.setForeground(Color.BLACK);
                        surnameTextField.setText("");
                        surnameTextField.setForeground(Color.BLACK);
                        secondSurnameTextField.setText("");
                        secondSurnameTextField.setForeground(Color.BLACK);
                    }
                    default ->
                        System.out.println("No he seleccionat res");
                }
            } catch (AuthorException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Unable to add the author", JOptionPane.ERROR_MESSAGE);
                //dispose();//this close the window
            }
        } else if (count > 0) {
            warningLabel.setVisible(true);//this makes the warning visible to let the user fix the error
        }
    }//GEN-LAST:event_confirmButtonActionPerformed
    //CANCEL BUTTON
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                NewAuthor dialog = new NewAuthor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JComboBox<String> countryComboBox;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel secondSurnameLabel;
    private javax.swing.JTextField secondSurnameTextField;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTextField surnameTextField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
